-- =============================================
-- Author:	Samantha Emerson
-- Create date: 1/23/2023
-- Description:	Pricings Select By Service Type Id Paginated or By Distance and Service Type Id
-- Code Reviewer: Seong Gwon

-- MODIFIED BY: 
-- MODIFIED DATE:
-- Code Reviewer:
-- Note: 
-- =============================================

ALTER PROC [dbo].[Pricings_Select_ByServiceTypeId_OrByDistAndServType]

		      @PageIndex int
			, @PageSize int
			, @ServiceTypeId int 
			, @Latitude float
			, @Longitude float
			, @Distance int

AS

/*--------------TEST CODE-------------

	DECLARE   @PageIndex int = 0
			, @PageSize int = 5
			, @ServiceTypeId int = 0
			, @Latitude float = 34.0522
			, @Longitude float = -118.2437
			, @Distance int = 5

	EXECUTE dbo.Pricings_Select_ByServiceTypeId_OrByDistAndServType
		      @PageIndex
			, @PageSize
			, @ServiceTypeId
			, @Latitude
			, @Longitude
			, @Distance

*/------------------------------------

DECLARE @offset int = @PageIndex * @PageSize

IF @ServiceTypeId = 0

BEGIN

	;WITH AllRecords as (


	SELECT    p.Id
			, p.ServiceName
			, p.Conditions
			, st.Id AS ServiceTypeId
			, st.Name AS ServiceTypeName
			, l.LineOne
			, l.LineTwo
			, l.City
			, s.Code
			, l.Zip
			, l.Latitude
			, l.Longitude
			, o.Id AS OrganizationId
			, o.Name AS OrganizationName
			, o.LogoUrl
			, o.BusinessPhone
			, o.SiteUrl
			, p.Cost
			, p.IsValidated
			, u.Id AS UserId
			, u.AvatarUrl
			, u.FirstName
			, u.LastName
			,( 3959 * acos( cos( radians(@Latitude) ) * cos( radians( l.Latitude ) ) * cos( radians( l.Longitude ) - radians(@Longitude) ) + sin( radians(@Latitude) ) * sin( radians(l.Latitude) ) ) ) AS Distance
			, TotalCount = COUNT(1) OVER() 

	FROM dbo.Pricings AS p
		INNER JOIN dbo.ServiceTypes AS st
			ON p.ServiceTypeId = st.Id
		INNER JOIN dbo.Organizations AS o
			ON p.OrganizationId = o.Id
		INNER JOIN dbo.Locations AS l
			ON p.LocationId = l.Id
		INNER JOIN dbo.Users AS u
			ON p.CreatedBy = u.Id
		INNER JOIN dbo.States AS s
			ON l.StateId = s.Id
			)
	, filteredRecords AS (
		SELECT *
		FROM AllRecords
		WHERE Distance < @Distance
		)

	SELECT

			  filteredRecords.Id
			, filteredRecords.ServiceName
			, filteredRecords.Conditions
			, filteredRecords.ServiceTypeId
			, filteredRecords.ServiceTypeName
			, filteredRecords.LineOne
			, filteredRecords.LineTwo
			, filteredRecords.City
			, filteredRecords.Code
			, filteredRecords.Zip
			, filteredRecords.Latitude
			, filteredRecords.Longitude
			, filteredRecords.OrganizationId
			, filteredRecords.OrganizationName
			, filteredRecords.LogoUrl
			, filteredRecords.BusinessPhone
			, filteredRecords.SiteUrl
			, filteredRecords.Cost
			, filteredRecords.IsValidated
			, filteredRecords.UserId
			, filteredRecords.AvatarUrl
			, filteredRecords.FirstName
			, filteredRecords.LastName
			, TotalCount = COUNT(1) OVER() 
			, Distance

	FROM filteredRecords

	WHERE Distance < @Distance

	ORDER BY filteredRecords.Cost ASC, Distance

	OFFSET @offset Rows
	Fetch Next @PageSize Rows ONLY

	END

ELSE 
BEGIN

	

	;WITH AllRecords as (


	SELECT    p.Id
			, p.ServiceName
			, p.Conditions
			, st.Id AS ServiceTypeId
			, st.Name AS ServiceTypeName
			, l.LineOne
			, l.LineTwo
			, l.City
			, s.Code
			, l.Zip
			, l.Latitude
			, l.Longitude
			, o.Id AS OrganizationId
			, o.Name AS OrganizationName
			, o.LogoUrl
			, o.BusinessPhone
			, o.SiteUrl
			, p.Cost
			, p.IsValidated
			, u.Id AS UserId
			, u.AvatarUrl
			, u.FirstName
			, u.LastName
			, ( 3959 * acos( cos( radians(@Latitude) ) * cos( radians( l.Latitude ) ) * cos( radians( l.Longitude ) - radians(@Longitude) ) + sin( radians(@Latitude) ) * sin( radians(l.Latitude) ) ) ) AS Distance
			, TotalCount = COUNT(1) OVER() 

	FROM dbo.Pricings AS p
		INNER JOIN dbo.ServiceTypes AS st
			ON p.ServiceTypeId = st.Id
		INNER JOIN dbo.Organizations AS o
			ON p.OrganizationId = o.Id
		INNER JOIN dbo.Locations AS l
			ON p.LocationId = l.Id
		INNER JOIN dbo.Users AS u
			ON p.CreatedBy = u.Id
		INNER JOIN dbo.States AS s
			ON l.StateId = s.Id
			)
	, filteredRecords AS (
		SELECT *
		FROM AllRecords
		WHERE Distance < @Distance
		)

	SELECT

			  filteredRecords.Id
			, filteredRecords.ServiceName
			, filteredRecords.Conditions
			, filteredRecords.ServiceTypeId
			, filteredRecords.ServiceTypeName
			, filteredRecords.LineOne
			, filteredRecords.LineTwo
			, filteredRecords.City
			, filteredRecords.Code
			, filteredRecords.Zip
			, filteredRecords.Latitude
			, filteredRecords.Longitude
			, filteredRecords.OrganizationId
			, filteredRecords.OrganizationName
			, filteredRecords.LogoUrl
			, filteredRecords.BusinessPhone
			, filteredRecords.SiteUrl
			, filteredRecords.Cost
			, filteredRecords.IsValidated
			, filteredRecords.UserId
			, filteredRecords.AvatarUrl
			, filteredRecords.FirstName
			, filteredRecords.LastName
			, TotalCount = COUNT(1) OVER() 
			, Distance

	FROM filteredRecords

	WHERE ServiceTypeId = @ServiceTypeId

	ORDER BY filteredRecords.Cost ASC, Distance

	OFFSET @offset Rows
	Fetch Next @PageSize Rows ONLY

END


